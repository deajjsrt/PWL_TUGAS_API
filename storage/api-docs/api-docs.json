{
    "openapi": "3.0.0",
    "info": {
        "title": "My Rest API",
        "description": "Laravel project to practice developing Rest API with L5 Swagger OpenApi",
        "contact": {
            "name": "Yonathan Dea",
            "email": "yonathan.422023017@civitas.ukrida.ac.id"
        },
        "version": "1.0",
        "x-logo": {
            "url": "https://miro.medium.com/v2/resize:fit:1200/1*J3G3akaMpUOLegw0p0qthA.png"
        }
    },
    "paths": {
        "/api/user/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Register new user & get token",
                "operationId": "register",
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": {
                                "name": "Yonathan",
                                "email": "yeye@gmail.com",
                                "password": "dei123",
                                "password_confirmation": "dei123"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Log in to existing user & get token",
                "operationId": "login",
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": {
                                "email": "yeye@gmail.com",
                                "password": "dei123"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/user/logout": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Log out & destroy self token",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "User Email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport_token_ready": [],
                        "passport": []
                    }
                ]
            }
        },
        "/api/bag": {
            "get": {
                "tags": [
                    "bag"
                ],
                "summary": "Display a listing of the items",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "current page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "_limit",
                        "in": "query",
                        "description": "max item in a page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 10
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "word to search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_publisher",
                        "in": "query",
                        "description": "search by publisher like name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_sort_by",
                        "in": "query",
                        "description": "word to search",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "6"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bag"
                ],
                "summary": "Store a newly created item",
                "operationId": "store",
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bag"
                            },
                            "example": {
                                "name": "LA MEDUSA CANVAS LARGE TOTE BAG",
                                "designer": "Gianni Versace",
                                "publisher": "Versace",
                                "publication_year": "2024",
                                "cover": "https://cdn-images.italist.com/image/upload/t_medium_dpr_2_q_auto_v_2,f_auto/ebcc1c021e598dcb630515710d2d2134.jpg",
                                "description": "Terinspirasi oleh mitologi Yunani, LA MEDUSA CANVAS LARGE TOTE BAG telah menjadi penanda utama rumah Versace. Dinamakan berdasarkan motif ikoniknya, tas jinjing berbahan kanvas La Medusa semakin dipertegas dengan logo timbul dan pegangan bagian atas berbahan kulit.",
                                "price": 26490000
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport_token_ready": [],
                        "passport": []
                    }
                ]
            }
        },
        "/api/bag/{id}": {
            "get": {
                "tags": [
                    "bag"
                ],
                "summary": "Display the specified item",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of item that needs to be displayed",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "bag"
                ],
                "summary": "Update the specified item",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of item that needs to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bag"
                            },
                            "example": {
                                "name": "LA MEDUSA CANVAS LARGE TOTE BAG",
                                "designer": "Gianni Versace",
                                "publisher": "Versace",
                                "publication_year": "2024",
                                "cover": "https://cdn-images.italist.com/image/upload/t_medium_dpr_2_q_auto_v_2,f_auto/ebcc1c021e598dcb630515710d2d2134.jpg",
                                "description": "Terinspirasi oleh mitologi Yunani, LA MEDUSA CANVAS LARGE TOTE BAG telah menjadi penanda utama rumah Versace. Dinamakan berdasarkan motif ikoniknya, tas jinjing berbahan kanvas La Medusa semakin dipertegas dengan logo timbul dan pegangan bagian atas berbahan kulit.",
                                "price": 26490000
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport_token_ready": [],
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "bag"
                ],
                "summary": "Remove the specified item",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of item that needs to be removed",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport_token_ready": [],
                        "passport": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Bag": {
                "title": "Bag model",
                "description": "Bag model",
                "required": [
                    "title",
                    "author"
                ],
                "xml": {
                    "name": "Bag"
                }
            },
            "User": {
                "title": "User model",
                "description": "User model",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "passport_token_ready": {
                "type": "http",
                "scheme": "bearer",
                "description": "Enter token in format without \"Bearer\"",
                "name": "Authorization",
                "in": "header"
            },
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    }
}